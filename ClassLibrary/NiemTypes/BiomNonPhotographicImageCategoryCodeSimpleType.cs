/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a Non-photographic Image Type Code
        /// </summary>
        /// <value>A data type for a Non-photographic Image Type Code</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum BiomNonPhotographicImageCategoryCodeSimpleType
        {
            /// <summary>
            /// Enum _3DCMEnum for 3DCM
            /// </summary>
            [EnumMember(Value = "3DCM")]
            _3DCMEnum = 0,
            /// <summary>
            /// Enum CONEEnum for CONE
            /// </summary>
            [EnumMember(Value = "CONE")]
            CONEEnum = 1,
            /// <summary>
            /// Enum CTEnum for CT
            /// </summary>
            [EnumMember(Value = "CT")]
            CTEnum = 2,
            /// <summary>
            /// Enum IREnum for IR
            /// </summary>
            [EnumMember(Value = "IR")]
            IREnum = 3,
            /// <summary>
            /// Enum MRIEnum for MRI
            /// </summary>
            [EnumMember(Value = "MRI")]
            MRIEnum = 4,
            /// <summary>
            /// Enum MultipleEnum for Multiple
            /// </summary>
            [EnumMember(Value = "Multiple")]
            MultipleEnum = 5,
            /// <summary>
            /// Enum SonogramEnum for Sonogram
            /// </summary>
            [EnumMember(Value = "Sonogram")]
            SonogramEnum = 6,
            /// <summary>
            /// Enum UVEnum for UV
            /// </summary>
            [EnumMember(Value = "UV")]
            UVEnum = 7,
            /// <summary>
            /// Enum XRAYEnum for XRAY
            /// </summary>
            [EnumMember(Value = "XRAY")]
            XRAYEnum = 8        }
}
