/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a kind of flexion crease
        /// </summary>
        /// <value>A data type for a kind of flexion crease</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum BiomMinutiaeFlexionCreaseCategoryCodeSimpleType
        {
            /// <summary>
            /// Enum DIPEnum for DIP
            /// </summary>
            [EnumMember(Value = "DIP")]
            DIPEnum = 0,
            /// <summary>
            /// Enum DTCEnum for DTC
            /// </summary>
            [EnumMember(Value = "DTC")]
            DTCEnum = 1,
            /// <summary>
            /// Enum PDC00Enum for PDC00
            /// </summary>
            [EnumMember(Value = "PDC00")]
            PDC00Enum = 2,
            /// <summary>
            /// Enum PDC01Enum for PDC01
            /// </summary>
            [EnumMember(Value = "PDC01")]
            PDC01Enum = 3,
            /// <summary>
            /// Enum PDC02Enum for PDC02
            /// </summary>
            [EnumMember(Value = "PDC02")]
            PDC02Enum = 4,
            /// <summary>
            /// Enum PDC03Enum for PDC03
            /// </summary>
            [EnumMember(Value = "PDC03")]
            PDC03Enum = 5,
            /// <summary>
            /// Enum PDC04Enum for PDC04
            /// </summary>
            [EnumMember(Value = "PDC04")]
            PDC04Enum = 6,
            /// <summary>
            /// Enum PDC05Enum for PDC05
            /// </summary>
            [EnumMember(Value = "PDC05")]
            PDC05Enum = 7,
            /// <summary>
            /// Enum PDC06Enum for PDC06
            /// </summary>
            [EnumMember(Value = "PDC06")]
            PDC06Enum = 8,
            /// <summary>
            /// Enum PDC07Enum for PDC07
            /// </summary>
            [EnumMember(Value = "PDC07")]
            PDC07Enum = 9,
            /// <summary>
            /// Enum PDC08Enum for PDC08
            /// </summary>
            [EnumMember(Value = "PDC08")]
            PDC08Enum = 10,
            /// <summary>
            /// Enum PDC09Enum for PDC09
            /// </summary>
            [EnumMember(Value = "PDC09")]
            PDC09Enum = 11,
            /// <summary>
            /// Enum PDC10Enum for PDC10
            /// </summary>
            [EnumMember(Value = "PDC10")]
            PDC10Enum = 12,
            /// <summary>
            /// Enum PDC16Enum for PDC16
            /// </summary>
            [EnumMember(Value = "PDC16")]
            PDC16Enum = 13,
            /// <summary>
            /// Enum PDC17Enum for PDC17
            /// </summary>
            [EnumMember(Value = "PDC17")]
            PDC17Enum = 14,
            /// <summary>
            /// Enum PIPEnum for PIP
            /// </summary>
            [EnumMember(Value = "PIP")]
            PIPEnum = 15,
            /// <summary>
            /// Enum PTCEnum for PTC
            /// </summary>
            [EnumMember(Value = "PTC")]
            PTCEnum = 16,
            /// <summary>
            /// Enum RLCEnum for RLC
            /// </summary>
            [EnumMember(Value = "RLC")]
            RLCEnum = 17,
            /// <summary>
            /// Enum WCEnum for WC
            /// </summary>
            [EnumMember(Value = "WC")]
            WCEnum = 18        }
}
