/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type describing the kinds of Apprehension methods
        /// </summary>
        /// <value>A data type describing the kinds of Apprehension methods</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum ScrArrestMethodCategoryCodeSimpleType
        {
            /// <summary>
            /// Enum ASEnum for AS
            /// </summary>
            [EnumMember(Value = "AS")]
            ASEnum = 0,
            /// <summary>
            /// Enum BPTEnum for BPT
            /// </summary>
            [EnumMember(Value = "BPT")]
            BPTEnum = 1,
            /// <summary>
            /// Enum CAPEnum for CAP
            /// </summary>
            [EnumMember(Value = "CAP")]
            CAPEnum = 2,
            /// <summary>
            /// Enum CRWEnum for CRW
            /// </summary>
            [EnumMember(Value = "CRW")]
            CRWEnum = 3,
            /// <summary>
            /// Enum ESEnum for ES
            /// </summary>
            [EnumMember(Value = "ES")]
            ESEnum = 4,
            /// <summary>
            /// Enum ESUEnum for ESU
            /// </summary>
            [EnumMember(Value = "ESU")]
            ESUEnum = 5,
            /// <summary>
            /// Enum ISPEnum for ISP
            /// </summary>
            [EnumMember(Value = "ISP")]
            ISPEnum = 6,
            /// <summary>
            /// Enum LEnum for L
            /// </summary>
            [EnumMember(Value = "L")]
            LEnum = 7,
            /// <summary>
            /// Enum OEnum for O
            /// </summary>
            [EnumMember(Value = "O")]
            OEnum = 8,
            /// <summary>
            /// Enum OAEnum for OA
            /// </summary>
            [EnumMember(Value = "OA")]
            OAEnum = 9,
            /// <summary>
            /// Enum OCDEnum for OCD
            /// </summary>
            [EnumMember(Value = "OCD")]
            OCDEnum = 10,
            /// <summary>
            /// Enum OTFEnum for OTF
            /// </summary>
            [EnumMember(Value = "OTF")]
            OTFEnum = 11,
            /// <summary>
            /// Enum PBEnum for PB
            /// </summary>
            [EnumMember(Value = "PB")]
            PBEnum = 12,
            /// <summary>
            /// Enum PIEnum for PI
            /// </summary>
            [EnumMember(Value = "PI")]
            PIEnum = 13,
            /// <summary>
            /// Enum TCAEnum for TCA
            /// </summary>
            [EnumMember(Value = "TCA")]
            TCAEnum = 14,
            /// <summary>
            /// Enum TCBEnum for TCB
            /// </summary>
            [EnumMember(Value = "TCB")]
            TCBEnum = 15,
            /// <summary>
            /// Enum TCFEnum for TCF
            /// </summary>
            [EnumMember(Value = "TCF")]
            TCFEnum = 16,
            /// <summary>
            /// Enum TCPEnum for TCP
            /// </summary>
            [EnumMember(Value = "TCP")]
            TCPEnum = 17,
            /// <summary>
            /// Enum TRCEnum for TRC
            /// </summary>
            [EnumMember(Value = "TRC")]
            TRCEnum = 18,
            /// <summary>
            /// Enum XXXEnum for XXX
            /// </summary>
            [EnumMember(Value = "XXX")]
            XXXEnum = 19        }
}
