/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type describing the kinds of biometrics used
        /// </summary>
        /// <value>A data type describing the kinds of biometrics used</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum BiomBiometricCategoryCodeSimpleType
        {
            /// <summary>
            /// Enum _10PrintEnum for 10-Print
            /// </summary>
            [EnumMember(Value = "10-Print")]
            _10PrintEnum = 0,
            /// <summary>
            /// Enum _2PrintEnum for 2-Print
            /// </summary>
            [EnumMember(Value = "2-Print")]
            _2PrintEnum = 1,
            /// <summary>
            /// Enum _4PrintEnum for 4-Print
            /// </summary>
            [EnumMember(Value = "4-Print")]
            _4PrintEnum = 2,
            /// <summary>
            /// Enum AllEnum for All
            /// </summary>
            [EnumMember(Value = "All")]
            AllEnum = 3,
            /// <summary>
            /// Enum BodyOdorEnum for Body Odor
            /// </summary>
            [EnumMember(Value = "Body Odor")]
            BodyOdorEnum = 4,
            /// <summary>
            /// Enum DentalEnum for Dental
            /// </summary>
            [EnumMember(Value = "Dental")]
            DentalEnum = 5,
            /// <summary>
            /// Enum DNAEnum for DNA
            /// </summary>
            [EnumMember(Value = "DNA")]
            DNAEnum = 6,
            /// <summary>
            /// Enum EarShapeEnum for Ear Shape
            /// </summary>
            [EnumMember(Value = "Ear Shape")]
            EarShapeEnum = 7,
            /// <summary>
            /// Enum FacialImageEnum for Facial Image
            /// </summary>
            [EnumMember(Value = "Facial Image")]
            FacialImageEnum = 8,
            /// <summary>
            /// Enum FingerGeometryEnum for Finger Geometry
            /// </summary>
            [EnumMember(Value = "Finger Geometry")]
            FingerGeometryEnum = 9,
            /// <summary>
            /// Enum FingerPrintsEnum for Finger Prints
            /// </summary>
            [EnumMember(Value = "Finger Prints")]
            FingerPrintsEnum = 10,
            /// <summary>
            /// Enum FootPrintEnum for Foot Print
            /// </summary>
            [EnumMember(Value = "Foot Print")]
            FootPrintEnum = 11,
            /// <summary>
            /// Enum GaitEnum for Gait
            /// </summary>
            [EnumMember(Value = "Gait")]
            GaitEnum = 12,
            /// <summary>
            /// Enum HandGeometryEnum for Hand Geometry
            /// </summary>
            [EnumMember(Value = "Hand Geometry")]
            HandGeometryEnum = 13,
            /// <summary>
            /// Enum IrisEnum for Iris
            /// </summary>
            [EnumMember(Value = "Iris")]
            IrisEnum = 14,
            /// <summary>
            /// Enum KeystrokeDynamicsEnum for Keystroke Dynamics
            /// </summary>
            [EnumMember(Value = "Keystroke Dynamics")]
            KeystrokeDynamicsEnum = 15,
            /// <summary>
            /// Enum LipMovementEnum for Lip Movement
            /// </summary>
            [EnumMember(Value = "Lip Movement")]
            LipMovementEnum = 16,
            /// <summary>
            /// Enum MugshotEnum for Mugshot
            /// </summary>
            [EnumMember(Value = "Mugshot")]
            MugshotEnum = 17,
            /// <summary>
            /// Enum MultipleBiometricsUsedEnum for Multiple Biometrics Used
            /// </summary>
            [EnumMember(Value = "Multiple Biometrics Used")]
            MultipleBiometricsUsedEnum = 18,
            /// <summary>
            /// Enum NoInformationGivenEnum for No Information Given
            /// </summary>
            [EnumMember(Value = "No Information Given")]
            NoInformationGivenEnum = 19,
            /// <summary>
            /// Enum NonPhotographicImageryEnum for Non-Photographic Imagery
            /// </summary>
            [EnumMember(Value = "Non-Photographic Imagery")]
            NonPhotographicImageryEnum = 20,
            /// <summary>
            /// Enum OtherEnum for Other
            /// </summary>
            [EnumMember(Value = "Other")]
            OtherEnum = 21,
            /// <summary>
            /// Enum PalmPrintEnum for Palm Print
            /// </summary>
            [EnumMember(Value = "Palm Print")]
            PalmPrintEnum = 22,
            /// <summary>
            /// Enum RetinaEnum for Retina
            /// </summary>
            [EnumMember(Value = "Retina")]
            RetinaEnum = 23,
            /// <summary>
            /// Enum SignatureEnum for Signature
            /// </summary>
            [EnumMember(Value = "Signature")]
            SignatureEnum = 24,
            /// <summary>
            /// Enum SMTEnum for SMT
            /// </summary>
            [EnumMember(Value = "SMT")]
            SMTEnum = 25,
            /// <summary>
            /// Enum TemplateSetIDEnum for TemplateSetID
            /// </summary>
            [EnumMember(Value = "TemplateSetID")]
            TemplateSetIDEnum = 26,
            /// <summary>
            /// Enum ThermalFaceImageEnum for Thermal Face Image
            /// </summary>
            [EnumMember(Value = "Thermal Face Image")]
            ThermalFaceImageEnum = 27,
            /// <summary>
            /// Enum ThermalHandImageEnum for Thermal Hand Image
            /// </summary>
            [EnumMember(Value = "Thermal Hand Image")]
            ThermalHandImageEnum = 28,
            /// <summary>
            /// Enum VeinPatternEnum for Vein Pattern
            /// </summary>
            [EnumMember(Value = "Vein Pattern")]
            VeinPatternEnum = 29,
            /// <summary>
            /// Enum VideoEnum for Video
            /// </summary>
            [EnumMember(Value = "Video")]
            VideoEnum = 30,
            /// <summary>
            /// Enum VoiceEnum for Voice
            /// </summary>
            [EnumMember(Value = "Voice")]
            VoiceEnum = 31        }
}
