/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a foot position
        /// </summary>
        /// <value>A data type for a foot position</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum BiomPlantarPositionCodeSimpleType
        {
            /// <summary>
            /// Enum NUMBER_60 for 60
            /// </summary>
            [EnumMember(Value = "60")]
            NUMBER_60 = 0,
            /// <summary>
            /// Enum NUMBER_61 for 61
            /// </summary>
            [EnumMember(Value = "61")]
            NUMBER_61 = 1,
            /// <summary>
            /// Enum NUMBER_62 for 62
            /// </summary>
            [EnumMember(Value = "62")]
            NUMBER_62 = 2,
            /// <summary>
            /// Enum NUMBER_63 for 63
            /// </summary>
            [EnumMember(Value = "63")]
            NUMBER_63 = 3,
            /// <summary>
            /// Enum NUMBER_64 for 64
            /// </summary>
            [EnumMember(Value = "64")]
            NUMBER_64 = 4,
            /// <summary>
            /// Enum NUMBER_65 for 65
            /// </summary>
            [EnumMember(Value = "65")]
            NUMBER_65 = 5,
            /// <summary>
            /// Enum NUMBER_66 for 66
            /// </summary>
            [EnumMember(Value = "66")]
            NUMBER_66 = 6,
            /// <summary>
            /// Enum NUMBER_67 for 67
            /// </summary>
            [EnumMember(Value = "67")]
            NUMBER_67 = 7,
            /// <summary>
            /// Enum NUMBER_68 for 68
            /// </summary>
            [EnumMember(Value = "68")]
            NUMBER_68 = 8,
            /// <summary>
            /// Enum NUMBER_69 for 69
            /// </summary>
            [EnumMember(Value = "69")]
            NUMBER_69 = 9,
            /// <summary>
            /// Enum NUMBER_70 for 70
            /// </summary>
            [EnumMember(Value = "70")]
            NUMBER_70 = 10,
            /// <summary>
            /// Enum NUMBER_71 for 71
            /// </summary>
            [EnumMember(Value = "71")]
            NUMBER_71 = 11,
            /// <summary>
            /// Enum NUMBER_72 for 72
            /// </summary>
            [EnumMember(Value = "72")]
            NUMBER_72 = 12,
            /// <summary>
            /// Enum NUMBER_73 for 73
            /// </summary>
            [EnumMember(Value = "73")]
            NUMBER_73 = 13,
            /// <summary>
            /// Enum NUMBER_74 for 74
            /// </summary>
            [EnumMember(Value = "74")]
            NUMBER_74 = 14,
            /// <summary>
            /// Enum NUMBER_75 for 75
            /// </summary>
            [EnumMember(Value = "75")]
            NUMBER_75 = 15,
            /// <summary>
            /// Enum NUMBER_76 for 76
            /// </summary>
            [EnumMember(Value = "76")]
            NUMBER_76 = 16,
            /// <summary>
            /// Enum NUMBER_77 for 77
            /// </summary>
            [EnumMember(Value = "77")]
            NUMBER_77 = 17,
            /// <summary>
            /// Enum NUMBER_78 for 78
            /// </summary>
            [EnumMember(Value = "78")]
            NUMBER_78 = 18,
            /// <summary>
            /// Enum NUMBER_79 for 79
            /// </summary>
            [EnumMember(Value = "79")]
            NUMBER_79 = 19        }
}
