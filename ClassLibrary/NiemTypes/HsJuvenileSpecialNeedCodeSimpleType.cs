/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for an enumerated list from the Adoption and Foster Care Annual Reporting System, 45 CFR 1355, appendix B (Adoption Data Elements), section III (Special Needs Status).
        /// </summary>
        /// <value>A data type for an enumerated list from the Adoption and Foster Care Annual Reporting System, 45 CFR 1355, appendix B (Adoption Data Elements), section III (Special Needs Status).</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum HsJuvenileSpecialNeedCodeSimpleType
        {
            /// <summary>
            /// Enum AgeEnum for Age
            /// </summary>
            [EnumMember(Value = "Age")]
            AgeEnum = 0,
            /// <summary>
            /// Enum EmotionallyDisturbedEnum for Emotionally disturbed
            /// </summary>
            [EnumMember(Value = "Emotionally disturbed")]
            EmotionallyDisturbedEnum = 1,
            /// <summary>
            /// Enum MedicalConditionEnum for Medical Condition
            /// </summary>
            [EnumMember(Value = "Medical Condition")]
            MedicalConditionEnum = 2,
            /// <summary>
            /// Enum MentalRetardationEnum for Mental retardation
            /// </summary>
            [EnumMember(Value = "Mental retardation")]
            MentalRetardationEnum = 3,
            /// <summary>
            /// Enum NotApplicableEnum for Not Applicable
            /// </summary>
            [EnumMember(Value = "Not Applicable")]
            NotApplicableEnum = 4,
            /// <summary>
            /// Enum OtherEnum for Other
            /// </summary>
            [EnumMember(Value = "Other")]
            OtherEnum = 5,
            /// <summary>
            /// Enum PhysicallyDisabledEnum for Physically disabled
            /// </summary>
            [EnumMember(Value = "Physically disabled")]
            PhysicallyDisabledEnum = 6,
            /// <summary>
            /// Enum RacialOriginalBackgroundEnum for Racial/Original Background
            /// </summary>
            [EnumMember(Value = "Racial/Original Background")]
            RacialOriginalBackgroundEnum = 7,
            /// <summary>
            /// Enum SiblingGroupEnum for Sibling Group
            /// </summary>
            [EnumMember(Value = "Sibling Group")]
            SiblingGroupEnum = 8,
            /// <summary>
            /// Enum VisuallyOrHearingImpairedEnum for Visually or hearing impaired
            /// </summary>
            [EnumMember(Value = "Visually or hearing impaired")]
            VisuallyOrHearingImpairedEnum = 9        }
}
