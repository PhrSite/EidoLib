/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a code that identifies the person's physique or body shape.
        /// </summary>
        /// <value>A data type for a code that identifies the person's physique or body shape.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum NdexPersonBuildCodeSimpleType
        {
            /// <summary>
            /// Enum AVERAGEEnum for AVERAGE
            /// </summary>
            [EnumMember(Value = "AVERAGE")]
            AVERAGEEnum = 0,
            /// <summary>
            /// Enum HEAVYEnum for HEAVY
            /// </summary>
            [EnumMember(Value = "HEAVY")]
            HEAVYEnum = 1,
            /// <summary>
            /// Enum LARGEEnum for LARGE
            /// </summary>
            [EnumMember(Value = "LARGE")]
            LARGEEnum = 2,
            /// <summary>
            /// Enum MEDIUMEnum for MEDIUM
            /// </summary>
            [EnumMember(Value = "MEDIUM")]
            MEDIUMEnum = 3,
            /// <summary>
            /// Enum MUSCULAREnum for MUSCULAR
            /// </summary>
            [EnumMember(Value = "MUSCULAR")]
            MUSCULAREnum = 4,
            /// <summary>
            /// Enum OBESEEnum for OBESE
            /// </summary>
            [EnumMember(Value = "OBESE")]
            OBESEEnum = 5,
            /// <summary>
            /// Enum POTBELLYEnum for POT BELLY
            /// </summary>
            [EnumMember(Value = "POT BELLY")]
            POTBELLYEnum = 6,
            /// <summary>
            /// Enum ROTUNDEnum for ROTUND
            /// </summary>
            [EnumMember(Value = "ROTUND")]
            ROTUNDEnum = 7,
            /// <summary>
            /// Enum SLIMEnum for SLIM
            /// </summary>
            [EnumMember(Value = "SLIM")]
            SLIMEnum = 8,
            /// <summary>
            /// Enum SMALLEnum for SMALL
            /// </summary>
            [EnumMember(Value = "SMALL")]
            SMALLEnum = 9,
            /// <summary>
            /// Enum STOCKYEnum for STOCKY
            /// </summary>
            [EnumMember(Value = "STOCKY")]
            STOCKYEnum = 10,
            /// <summary>
            /// Enum THINEnum for THIN
            /// </summary>
            [EnumMember(Value = "THIN")]
            THINEnum = 11,
            /// <summary>
            /// Enum UNKNOWNEnum for UNKNOWN
            /// </summary>
            [EnumMember(Value = "UNKNOWN")]
            UNKNOWNEnum = 12,
            /// <summary>
            /// Enum VERYTHINEnum for VERY THIN
            /// </summary>
            [EnumMember(Value = "VERY THIN")]
            VERYTHINEnum = 13        }
}
