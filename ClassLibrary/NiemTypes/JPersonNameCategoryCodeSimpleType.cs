/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for possible kinds of names.
        /// </summary>
        /// <value>A data type for possible kinds of names.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum JPersonNameCategoryCodeSimpleType
        {
            /// <summary>
            /// Enum AkaEnum for aka
            /// </summary>
            [EnumMember(Value = "aka")]
            AkaEnum = 0,
            /// <summary>
            /// Enum AliasEnum for alias
            /// </summary>
            [EnumMember(Value = "alias")]
            AliasEnum = 1,
            /// <summary>
            /// Enum CallSignEnum for call sign
            /// </summary>
            [EnumMember(Value = "call sign")]
            CallSignEnum = 2,
            /// <summary>
            /// Enum DbaEnum for dba
            /// </summary>
            [EnumMember(Value = "dba")]
            DbaEnum = 3,
            /// <summary>
            /// Enum FkaEnum for fka
            /// </summary>
            [EnumMember(Value = "fka")]
            FkaEnum = 4,
            /// <summary>
            /// Enum HandleEnum for handle
            /// </summary>
            [EnumMember(Value = "handle")]
            HandleEnum = 5,
            /// <summary>
            /// Enum MonikerEnum for moniker
            /// </summary>
            [EnumMember(Value = "moniker")]
            MonikerEnum = 6,
            /// <summary>
            /// Enum NicknameEnum for nickname
            /// </summary>
            [EnumMember(Value = "nickname")]
            NicknameEnum = 7,
            /// <summary>
            /// Enum OtherEnum for other
            /// </summary>
            [EnumMember(Value = "other")]
            OtherEnum = 8,
            /// <summary>
            /// Enum ProvidedEnum for provided
            /// </summary>
            [EnumMember(Value = "provided")]
            ProvidedEnum = 9,
            /// <summary>
            /// Enum PseudonymEnum for pseudonym
            /// </summary>
            [EnumMember(Value = "pseudonym")]
            PseudonymEnum = 10,
            /// <summary>
            /// Enum UnknownEnum for unknown
            /// </summary>
            [EnumMember(Value = "unknown")]
            UnknownEnum = 11,
            /// <summary>
            /// Enum UserIdEnum for user id
            /// </summary>
            [EnumMember(Value = "user id")]
            UserIdEnum = 12        }
}
