/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a kind of surface on which a friction ridge impression was deposited
        /// </summary>
        /// <value>A data type for a kind of surface on which a friction ridge impression was deposited</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum BiomMinutiaeLatentSubstrateCategoryCodeSimpleType
        {
            /// <summary>
            /// Enum _1AEnum for 1A
            /// </summary>
            [EnumMember(Value = "1A")]
            _1AEnum = 0,
            /// <summary>
            /// Enum _1BEnum for 1B
            /// </summary>
            [EnumMember(Value = "1B")]
            _1BEnum = 1,
            /// <summary>
            /// Enum _1CEnum for 1C
            /// </summary>
            [EnumMember(Value = "1C")]
            _1CEnum = 2,
            /// <summary>
            /// Enum NUMBER_1D for 1D
            /// </summary>
            [EnumMember(Value = "1D")]
            NUMBER_1D = 3,
            /// <summary>
            /// Enum _2AEnum for 2A
            /// </summary>
            [EnumMember(Value = "2A")]
            _2AEnum = 4,
            /// <summary>
            /// Enum _2BEnum for 2B
            /// </summary>
            [EnumMember(Value = "2B")]
            _2BEnum = 5,
            /// <summary>
            /// Enum _2CEnum for 2C
            /// </summary>
            [EnumMember(Value = "2C")]
            _2CEnum = 6,
            /// <summary>
            /// Enum NUMBER_2D for 2D
            /// </summary>
            [EnumMember(Value = "2D")]
            NUMBER_2D = 7,
            /// <summary>
            /// Enum _2EEnum for 2E
            /// </summary>
            [EnumMember(Value = "2E")]
            _2EEnum = 8,
            /// <summary>
            /// Enum NUMBER_2F for 2F
            /// </summary>
            [EnumMember(Value = "2F")]
            NUMBER_2F = 9,
            /// <summary>
            /// Enum _2GEnum for 2G
            /// </summary>
            [EnumMember(Value = "2G")]
            _2GEnum = 10,
            /// <summary>
            /// Enum _2HEnum for 2H
            /// </summary>
            [EnumMember(Value = "2H")]
            _2HEnum = 11,
            /// <summary>
            /// Enum _2IEnum for 2I
            /// </summary>
            [EnumMember(Value = "2I")]
            _2IEnum = 12,
            /// <summary>
            /// Enum _3AEnum for 3A
            /// </summary>
            [EnumMember(Value = "3A")]
            _3AEnum = 13,
            /// <summary>
            /// Enum _3BEnum for 3B
            /// </summary>
            [EnumMember(Value = "3B")]
            _3BEnum = 14,
            /// <summary>
            /// Enum _3CEnum for 3C
            /// </summary>
            [EnumMember(Value = "3C")]
            _3CEnum = 15,
            /// <summary>
            /// Enum NUMBER_3D for 3D
            /// </summary>
            [EnumMember(Value = "3D")]
            NUMBER_3D = 16,
            /// <summary>
            /// Enum _3EEnum for 3E
            /// </summary>
            [EnumMember(Value = "3E")]
            _3EEnum = 17,
            /// <summary>
            /// Enum NUMBER_3F for 3F
            /// </summary>
            [EnumMember(Value = "3F")]
            NUMBER_3F = 18,
            /// <summary>
            /// Enum _3GEnum for 3G
            /// </summary>
            [EnumMember(Value = "3G")]
            _3GEnum = 19,
            /// <summary>
            /// Enum _4AEnum for 4A
            /// </summary>
            [EnumMember(Value = "4A")]
            _4AEnum = 20,
            /// <summary>
            /// Enum _4BEnum for 4B
            /// </summary>
            [EnumMember(Value = "4B")]
            _4BEnum = 21        }
}
