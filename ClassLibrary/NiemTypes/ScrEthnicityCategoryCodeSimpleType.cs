/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a kind of ethnicity.
        /// </summary>
        /// <value>A data type for a kind of ethnicity.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum ScrEthnicityCategoryCodeSimpleType
        {
            /// <summary>
            /// Enum AEnum for A
            /// </summary>
            [EnumMember(Value = "A")]
            AEnum = 0,
            /// <summary>
            /// Enum ARMENEnum for ARMEN
            /// </summary>
            [EnumMember(Value = "ARMEN")]
            ARMENEnum = 1,
            /// <summary>
            /// Enum AZERBEnum for AZERB
            /// </summary>
            [EnumMember(Value = "AZERB")]
            AZERBEnum = 2,
            /// <summary>
            /// Enum BEnum for B
            /// </summary>
            [EnumMember(Value = "B")]
            BEnum = 3,
            /// <summary>
            /// Enum BASQUEnum for BASQU
            /// </summary>
            [EnumMember(Value = "BASQU")]
            BASQUEnum = 4,
            /// <summary>
            /// Enum CHINEEnum for CHINE
            /// </summary>
            [EnumMember(Value = "CHINE")]
            CHINEEnum = 5,
            /// <summary>
            /// Enum ERITREnum for ERITR
            /// </summary>
            [EnumMember(Value = "ERITR")]
            ERITREnum = 6,
            /// <summary>
            /// Enum ESTONEnum for ESTON
            /// </summary>
            [EnumMember(Value = "ESTON")]
            ESTONEnum = 7,
            /// <summary>
            /// Enum GEORGEnum for GEORG
            /// </summary>
            [EnumMember(Value = "GEORG")]
            GEORGEnum = 8,
            /// <summary>
            /// Enum GYPSYEnum for GYPSY
            /// </summary>
            [EnumMember(Value = "GYPSY")]
            GYPSYEnum = 9,
            /// <summary>
            /// Enum HEnum for H
            /// </summary>
            [EnumMember(Value = "H")]
            HEnum = 10,
            /// <summary>
            /// Enum HMONGEnum for HMONG
            /// </summary>
            [EnumMember(Value = "HMONG")]
            HMONGEnum = 11,
            /// <summary>
            /// Enum HUNGAEnum for HUNGA
            /// </summary>
            [EnumMember(Value = "HUNGA")]
            HUNGAEnum = 12,
            /// <summary>
            /// Enum IEnum for I
            /// </summary>
            [EnumMember(Value = "I")]
            IEnum = 13,
            /// <summary>
            /// Enum INDIAEnum for INDIA
            /// </summary>
            [EnumMember(Value = "INDIA")]
            INDIAEnum = 14,
            /// <summary>
            /// Enum KHMEREnum for KHMER
            /// </summary>
            [EnumMember(Value = "KHMER")]
            KHMEREnum = 15,
            /// <summary>
            /// Enum KURDEnum for KURD
            /// </summary>
            [EnumMember(Value = "KURD")]
            KURDEnum = 16,
            /// <summary>
            /// Enum LATVIEnum for LATVI
            /// </summary>
            [EnumMember(Value = "LATVI")]
            LATVIEnum = 17,
            /// <summary>
            /// Enum LITHUEnum for LITHU
            /// </summary>
            [EnumMember(Value = "LITHU")]
            LITHUEnum = 18,
            /// <summary>
            /// Enum MONGEnum for MONG
            /// </summary>
            [EnumMember(Value = "MONG")]
            MONGEnum = 19,
            /// <summary>
            /// Enum NEnum for N
            /// </summary>
            [EnumMember(Value = "N")]
            NEnum = 20,
            /// <summary>
            /// Enum OTHEREnum for OTHER
            /// </summary>
            [EnumMember(Value = "OTHER")]
            OTHEREnum = 21,
            /// <summary>
            /// Enum RUSSIEnum for RUSSI
            /// </summary>
            [EnumMember(Value = "RUSSI")]
            RUSSIEnum = 22,
            /// <summary>
            /// Enum TAMILEnum for TAMIL
            /// </summary>
            [EnumMember(Value = "TAMIL")]
            TAMILEnum = 23,
            /// <summary>
            /// Enum TIBITEnum for TIBIT
            /// </summary>
            [EnumMember(Value = "TIBIT")]
            TIBITEnum = 24,
            /// <summary>
            /// Enum TIGREEnum for TIGRE
            /// </summary>
            [EnumMember(Value = "TIGRE")]
            TIGREEnum = 25,
            /// <summary>
            /// Enum TURKEnum for TURK
            /// </summary>
            [EnumMember(Value = "TURK")]
            TURKEnum = 26,
            /// <summary>
            /// Enum UEnum for U
            /// </summary>
            [EnumMember(Value = "U")]
            UEnum = 27,
            /// <summary>
            /// Enum UNKNOEnum for UNKNO
            /// </summary>
            [EnumMember(Value = "UNKNO")]
            UNKNOEnum = 28,
            /// <summary>
            /// Enum WEnum for W
            /// </summary>
            [EnumMember(Value = "W")]
            WEnum = 29        }
}
