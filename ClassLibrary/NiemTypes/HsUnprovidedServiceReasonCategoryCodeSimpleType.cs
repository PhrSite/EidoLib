/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a kind of reason a service was not provided, e.g organizational barriers.
        /// </summary>
        /// <value>A data type for a kind of reason a service was not provided, e.g organizational barriers.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum HsUnprovidedServiceReasonCategoryCodeSimpleType
        {
            /// <summary>
            /// Enum AbsenceOfLegalAuthorityEnum for Absence of Legal Authority
            /// </summary>
            [EnumMember(Value = "Absence of Legal Authority")]
            AbsenceOfLegalAuthorityEnum = 0,
            /// <summary>
            /// Enum FeelingOfNoSupportAndIsolationEnum for Feeling of no support and isolation
            /// </summary>
            [EnumMember(Value = "Feeling of no support and isolation")]
            FeelingOfNoSupportAndIsolationEnum = 1,
            /// <summary>
            /// Enum IneffectiveCoordinationWithFederalAgenciesEnum for Ineffective coordination with federal agencies
            /// </summary>
            [EnumMember(Value = "Ineffective coordination with federal agencies")]
            IneffectiveCoordinationWithFederalAgenciesEnum = 2,
            /// <summary>
            /// Enum IneffectiveCoordinationWithLocalAgenciesEnum for Ineffective coordination with local agencies
            /// </summary>
            [EnumMember(Value = "Ineffective coordination with local agencies")]
            IneffectiveCoordinationWithLocalAgenciesEnum = 3,
            /// <summary>
            /// Enum LackOfAdequateFundingEnum for Lack of adequate funding
            /// </summary>
            [EnumMember(Value = "Lack of adequate funding")]
            LackOfAdequateFundingEnum = 4,
            /// <summary>
            /// Enum LackOfAdequateResourcesEnum for Lack of adequate resources
            /// </summary>
            [EnumMember(Value = "Lack of adequate resources")]
            LackOfAdequateResourcesEnum = 5,
            /// <summary>
            /// Enum LackOfAdequateTrainingEnum for Lack of adequate training
            /// </summary>
            [EnumMember(Value = "Lack of adequate training")]
            LackOfAdequateTrainingEnum = 6,
            /// <summary>
            /// Enum LackOfFormalRulesAndRegulationsEnum for Lack of formal rules and regulations
            /// </summary>
            [EnumMember(Value = "Lack of formal rules and regulations")]
            LackOfFormalRulesAndRegulationsEnum = 7,
            /// <summary>
            /// Enum LackOfHealthInsuranceEnum for Lack of health insurance
            /// </summary>
            [EnumMember(Value = "Lack of health insurance")]
            LackOfHealthInsuranceEnum = 8,
            /// <summary>
            /// Enum LackOfInHouseProceduresEnum for Lack of in-house procedures
            /// </summary>
            [EnumMember(Value = "Lack of in-house procedures")]
            LackOfInHouseProceduresEnum = 9,
            /// <summary>
            /// Enum LackOfKnowledgeOfFreeHealthCareOptionsEnum for Lack of knowledge of free health care options
            /// </summary>
            [EnumMember(Value = "Lack of knowledge of free health care options")]
            LackOfKnowledgeOfFreeHealthCareOptionsEnum = 10,
            /// <summary>
            /// Enum LackOfKnowledgeOfVictimsRightsEnum for Lack of knowledge of victims rights
            /// </summary>
            [EnumMember(Value = "Lack of knowledge of victims rights")]
            LackOfKnowledgeOfVictimsRightsEnum = 11,
            /// <summary>
            /// Enum LanguageConcernsEnum for Language concerns
            /// </summary>
            [EnumMember(Value = "Language concerns")]
            LanguageConcernsEnum = 12,
            /// <summary>
            /// Enum SafetyConcernsEnum for Safety concerns
            /// </summary>
            [EnumMember(Value = "Safety concerns")]
            SafetyConcernsEnum = 13,
            /// <summary>
            /// Enum VictimsLegalStatusEnum for Victims legal status
            /// </summary>
            [EnumMember(Value = "Victims legal status")]
            VictimsLegalStatusEnum = 14        }
}
