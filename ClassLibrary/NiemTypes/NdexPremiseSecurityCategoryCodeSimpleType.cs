/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a code that identifies the type of security present at the point of entry to a premises for an incident.
        /// </summary>
        /// <value>A data type for a code that identifies the type of security present at the point of entry to a premises for an incident.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum NdexPremiseSecurityCategoryCodeSimpleType
        {
            /// <summary>
            /// Enum AlarmAudioEnum for Alarm_audio
            /// </summary>
            [EnumMember(Value = "Alarm_audio")]
            AlarmAudioEnum = 0,
            /// <summary>
            /// Enum AlarmSilentEnum for Alarm_silent
            /// </summary>
            [EnumMember(Value = "Alarm_silent")]
            AlarmSilentEnum = 1,
            /// <summary>
            /// Enum AntiTheftDeviceEnum for AntiTheft device
            /// </summary>
            [EnumMember(Value = "AntiTheft device")]
            AntiTheftDeviceEnum = 2,
            /// <summary>
            /// Enum CameraEnum for Camera
            /// </summary>
            [EnumMember(Value = "Camera")]
            CameraEnum = 3,
            /// <summary>
            /// Enum CameraRecordingEnum for Camera_Recording
            /// </summary>
            [EnumMember(Value = "Camera_Recording")]
            CameraRecordingEnum = 4,
            /// <summary>
            /// Enum DogEnum for Dog
            /// </summary>
            [EnumMember(Value = "Dog")]
            DogEnum = 5,
            /// <summary>
            /// Enum FenceEnum for Fence
            /// </summary>
            [EnumMember(Value = "Fence")]
            FenceEnum = 6,
            /// <summary>
            /// Enum GateEnum for Gate
            /// </summary>
            [EnumMember(Value = "Gate")]
            GateEnum = 7,
            /// <summary>
            /// Enum GuardEnum for Guard
            /// </summary>
            [EnumMember(Value = "Guard")]
            GuardEnum = 8,
            /// <summary>
            /// Enum GuardSecurityPatrolEnum for Guard_Security Patrol
            /// </summary>
            [EnumMember(Value = "Guard_Security Patrol")]
            GuardSecurityPatrolEnum = 9,
            /// <summary>
            /// Enum KillSwitchEnum for Kill switch
            /// </summary>
            [EnumMember(Value = "Kill switch")]
            KillSwitchEnum = 10,
            /// <summary>
            /// Enum LightsEnum for Lights
            /// </summary>
            [EnumMember(Value = "Lights")]
            LightsEnum = 11,
            /// <summary>
            /// Enum LightsExteriorEnum for Lights_Exterior
            /// </summary>
            [EnumMember(Value = "Lights_Exterior")]
            LightsExteriorEnum = 12,
            /// <summary>
            /// Enum LightsInteriorEnum for Lights_Interior
            /// </summary>
            [EnumMember(Value = "Lights_Interior")]
            LightsInteriorEnum = 13,
            /// <summary>
            /// Enum LockEnum for Lock
            /// </summary>
            [EnumMember(Value = "Lock")]
            LockEnum = 14,
            /// <summary>
            /// Enum LockDeadboltEnum for Lock_Deadbolt
            /// </summary>
            [EnumMember(Value = "Lock_Deadbolt")]
            LockDeadboltEnum = 15,
            /// <summary>
            /// Enum LockElectronicEnum for Lock_Electronic
            /// </summary>
            [EnumMember(Value = "Lock_Electronic")]
            LockElectronicEnum = 16,
            /// <summary>
            /// Enum LockPadlockEnum for Lock_Padlock
            /// </summary>
            [EnumMember(Value = "Lock_Padlock")]
            LockPadlockEnum = 17,
            /// <summary>
            /// Enum NeighborhoodWatchEnum for Neighborhood watch
            /// </summary>
            [EnumMember(Value = "Neighborhood watch")]
            NeighborhoodWatchEnum = 18,
            /// <summary>
            /// Enum NoneEnum for None
            /// </summary>
            [EnumMember(Value = "None")]
            NoneEnum = 19,
            /// <summary>
            /// Enum OperationIDEnum for Operation ID
            /// </summary>
            [EnumMember(Value = "Operation ID")]
            OperationIDEnum = 20,
            /// <summary>
            /// Enum SecuritySignStickerEnum for Security sign_Sticker
            /// </summary>
            [EnumMember(Value = "Security sign_Sticker")]
            SecuritySignStickerEnum = 21,
            /// <summary>
            /// Enum UnknownEnum for Unknown
            /// </summary>
            [EnumMember(Value = "Unknown")]
            UnknownEnum = 22,
            /// <summary>
            /// Enum UnlockedEnum for Unlocked
            /// </summary>
            [EnumMember(Value = "Unlocked")]
            UnlockedEnum = 23,
            /// <summary>
            /// Enum WindowBarsEnum for Window bars
            /// </summary>
            [EnumMember(Value = "Window bars")]
            WindowBarsEnum = 24        }
}
