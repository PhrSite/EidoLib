/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a code that identifies the current disposition of the incident.
        /// </summary>
        /// <value>A data type for a code that identifies the current disposition of the incident.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum NdexIncidentStatusCodeSimpleType
        {
            /// <summary>
            /// Enum ACTIVEEnum for ACTIVE
            /// </summary>
            [EnumMember(Value = "ACTIVE")]
            ACTIVEEnum = 0,
            /// <summary>
            /// Enum ADMINISTRATIVELYCLOSEDEnum for ADMINISTRATIVELY CLOSED
            /// </summary>
            [EnumMember(Value = "ADMINISTRATIVELY CLOSED")]
            ADMINISTRATIVELYCLOSEDEnum = 1,
            /// <summary>
            /// Enum CLEAREDBYARRESTEnum for CLEARED BY ARREST
            /// </summary>
            [EnumMember(Value = "CLEARED BY ARREST")]
            CLEAREDBYARRESTEnum = 2,
            /// <summary>
            /// Enum CLEAREDBYEXCEPTIONALMEANSEnum for CLEARED BY EXCEPTIONAL MEANS
            /// </summary>
            [EnumMember(Value = "CLEARED BY EXCEPTIONAL MEANS")]
            CLEAREDBYEXCEPTIONALMEANSEnum = 3,
            /// <summary>
            /// Enum CLOSEDEnum for CLOSED
            /// </summary>
            [EnumMember(Value = "CLOSED")]
            CLOSEDEnum = 4,
            /// <summary>
            /// Enum COLDEnum for COLD
            /// </summary>
            [EnumMember(Value = "COLD")]
            COLDEnum = 5,
            /// <summary>
            /// Enum INACTIVEEnum for INACTIVE
            /// </summary>
            [EnumMember(Value = "INACTIVE")]
            INACTIVEEnum = 6,
            /// <summary>
            /// Enum OPENEnum for OPEN
            /// </summary>
            [EnumMember(Value = "OPEN")]
            OPENEnum = 7,
            /// <summary>
            /// Enum PENDINGEnum for PENDING
            /// </summary>
            [EnumMember(Value = "PENDING")]
            PENDINGEnum = 8,
            /// <summary>
            /// Enum REOPENEDEnum for RE_OPENED
            /// </summary>
            [EnumMember(Value = "RE_OPENED")]
            REOPENEDEnum = 9,
            /// <summary>
            /// Enum UNFOUNDEDEnum for UNFOUNDED
            /// </summary>
            [EnumMember(Value = "UNFOUNDED")]
            UNFOUNDEDEnum = 10        }
}
