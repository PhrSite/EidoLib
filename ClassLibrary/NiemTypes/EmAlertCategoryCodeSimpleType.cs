/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a code set denoting the type of alert message
        /// </summary>
        /// <value>A data type for a code set denoting the type of alert message</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum EmAlertCategoryCodeSimpleType
        {
            /// <summary>
            /// Enum AckEnum for Ack
            /// </summary>
            [EnumMember(Value = "Ack")]
            AckEnum = 0,
            /// <summary>
            /// Enum CancelEnum for Cancel
            /// </summary>
            [EnumMember(Value = "Cancel")]
            CancelEnum = 1,
            /// <summary>
            /// Enum DispatchEnum for Dispatch
            /// </summary>
            [EnumMember(Value = "Dispatch")]
            DispatchEnum = 2,
            /// <summary>
            /// Enum ErrorEnum for Error
            /// </summary>
            [EnumMember(Value = "Error")]
            ErrorEnum = 3,
            /// <summary>
            /// Enum ReportEnum for Report
            /// </summary>
            [EnumMember(Value = "Report")]
            ReportEnum = 4,
            /// <summary>
            /// Enum RequestEnum for Request
            /// </summary>
            [EnumMember(Value = "Request")]
            RequestEnum = 5,
            /// <summary>
            /// Enum ResponseEnum for Response
            /// </summary>
            [EnumMember(Value = "Response")]
            ResponseEnum = 6,
            /// <summary>
            /// Enum SensorConfigurationEnum for Sensor Configuration
            /// </summary>
            [EnumMember(Value = "Sensor Configuration")]
            SensorConfigurationEnum = 7,
            /// <summary>
            /// Enum SensorControlEnum for Sensor Control
            /// </summary>
            [EnumMember(Value = "Sensor Control")]
            SensorControlEnum = 8,
            /// <summary>
            /// Enum SensorDetectionEnum for Sensor Detection
            /// </summary>
            [EnumMember(Value = "Sensor Detection")]
            SensorDetectionEnum = 9,
            /// <summary>
            /// Enum SensorStatusEnum for Sensor Status
            /// </summary>
            [EnumMember(Value = "Sensor Status")]
            SensorStatusEnum = 10,
            /// <summary>
            /// Enum UpdateEnum for Update
            /// </summary>
            [EnumMember(Value = "Update")]
            UpdateEnum = 11        }
}
