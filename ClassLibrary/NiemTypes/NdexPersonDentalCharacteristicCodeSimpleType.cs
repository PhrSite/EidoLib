/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a code that identifies dental characteristics for the person.
        /// </summary>
        /// <value>A data type for a code that identifies dental characteristics for the person.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum NdexPersonDentalCharacteristicCodeSimpleType
        {
            /// <summary>
            /// Enum BRACESEnum for BRACES
            /// </summary>
            [EnumMember(Value = "BRACES")]
            BRACESEnum = 0,
            /// <summary>
            /// Enum BRIDGEEnum for BRIDGE
            /// </summary>
            [EnumMember(Value = "BRIDGE")]
            BRIDGEEnum = 1,
            /// <summary>
            /// Enum BROKENCHIPPEDEnum for BROKEN_CHIPPED
            /// </summary>
            [EnumMember(Value = "BROKEN_CHIPPED")]
            BROKENCHIPPEDEnum = 2,
            /// <summary>
            /// Enum BUCKEDEnum for BUCKED
            /// </summary>
            [EnumMember(Value = "BUCKED")]
            BUCKEDEnum = 3,
            /// <summary>
            /// Enum CROOKEDEnum for CROOKED
            /// </summary>
            [EnumMember(Value = "CROOKED")]
            CROOKEDEnum = 4,
            /// <summary>
            /// Enum DECAYEDDECOLOREDEnum for DECAYED_DECOLORED
            /// </summary>
            [EnumMember(Value = "DECAYED_DECOLORED")]
            DECAYEDDECOLOREDEnum = 5,
            /// <summary>
            /// Enum DENTURELOWEREnum for DENTURE LOWER
            /// </summary>
            [EnumMember(Value = "DENTURE LOWER")]
            DENTURELOWEREnum = 6,
            /// <summary>
            /// Enum DENTUREUPPEREnum for DENTURE UPPER
            /// </summary>
            [EnumMember(Value = "DENTURE UPPER")]
            DENTUREUPPEREnum = 7,
            /// <summary>
            /// Enum DIAMONDEnum for DIAMOND
            /// </summary>
            [EnumMember(Value = "DIAMOND")]
            DIAMONDEnum = 8,
            /// <summary>
            /// Enum FALSEEnum for FALSE
            /// </summary>
            [EnumMember(Value = "FALSE")]
            FALSEEnum = 9,
            /// <summary>
            /// Enum FILLINGSEnum for FILLINGS
            /// </summary>
            [EnumMember(Value = "FILLINGS")]
            FILLINGSEnum = 10,
            /// <summary>
            /// Enum GAPPEDEnum for GAPPED
            /// </summary>
            [EnumMember(Value = "GAPPED")]
            GAPPEDEnum = 11,
            /// <summary>
            /// Enum IRREGULAREnum for IRREGULAR
            /// </summary>
            [EnumMember(Value = "IRREGULAR")]
            IRREGULAREnum = 12,
            /// <summary>
            /// Enum MISSINGEnum for MISSING
            /// </summary>
            [EnumMember(Value = "MISSING")]
            MISSINGEnum = 13,
            /// <summary>
            /// Enum NONEEnum for NONE
            /// </summary>
            [EnumMember(Value = "NONE")]
            NONEEnum = 14,
            /// <summary>
            /// Enum NORMALEnum for NORMAL
            /// </summary>
            [EnumMember(Value = "NORMAL")]
            NORMALEnum = 15,
            /// <summary>
            /// Enum OVERBITEPROTRUSIONEnum for OVERBITE_PROTRUSION
            /// </summary>
            [EnumMember(Value = "OVERBITE_PROTRUSION")]
            OVERBITEPROTRUSIONEnum = 16,
            /// <summary>
            /// Enum RESTORATIONSCAPSEnum for RESTORATIONS_CAPS
            /// </summary>
            [EnumMember(Value = "RESTORATIONS_CAPS")]
            RESTORATIONSCAPSEnum = 17,
            /// <summary>
            /// Enum STAINEDEnum for STAINED
            /// </summary>
            [EnumMember(Value = "STAINED")]
            STAINEDEnum = 18,
            /// <summary>
            /// Enum STAREnum for STAR
            /// </summary>
            [EnumMember(Value = "STAR")]
            STAREnum = 19,
            /// <summary>
            /// Enum UNDERBITEEnum for UNDERBITE
            /// </summary>
            [EnumMember(Value = "UNDERBITE")]
            UNDERBITEEnum = 20,
            /// <summary>
            /// Enum UNKNOWNEnum for UNKNOWN
            /// </summary>
            [EnumMember(Value = "UNKNOWN")]
            UNKNOWNEnum = 21,
            /// <summary>
            /// Enum VISIBLEGOLDEnum for VISIBLE GOLD
            /// </summary>
            [EnumMember(Value = "VISIBLE GOLD")]
            VISIBLEGOLDEnum = 22,
            /// <summary>
            /// Enum VISIBLESILVEREnum for VISIBLE SILVER
            /// </summary>
            [EnumMember(Value = "VISIBLE SILVER")]
            VISIBLESILVEREnum = 23        }
}
