/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a palm position
        /// </summary>
        /// <value>A data type for a palm position</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum BiomPalmPositionCodeSimpleType
        {
            /// <summary>
            /// Enum NUMBER_20 for 20
            /// </summary>
            [EnumMember(Value = "20")]
            NUMBER_20 = 0,
            /// <summary>
            /// Enum NUMBER_21 for 21
            /// </summary>
            [EnumMember(Value = "21")]
            NUMBER_21 = 1,
            /// <summary>
            /// Enum NUMBER_22 for 22
            /// </summary>
            [EnumMember(Value = "22")]
            NUMBER_22 = 2,
            /// <summary>
            /// Enum NUMBER_23 for 23
            /// </summary>
            [EnumMember(Value = "23")]
            NUMBER_23 = 3,
            /// <summary>
            /// Enum NUMBER_24 for 24
            /// </summary>
            [EnumMember(Value = "24")]
            NUMBER_24 = 4,
            /// <summary>
            /// Enum NUMBER_25 for 25
            /// </summary>
            [EnumMember(Value = "25")]
            NUMBER_25 = 5,
            /// <summary>
            /// Enum NUMBER_26 for 26
            /// </summary>
            [EnumMember(Value = "26")]
            NUMBER_26 = 6,
            /// <summary>
            /// Enum NUMBER_27 for 27
            /// </summary>
            [EnumMember(Value = "27")]
            NUMBER_27 = 7,
            /// <summary>
            /// Enum NUMBER_28 for 28
            /// </summary>
            [EnumMember(Value = "28")]
            NUMBER_28 = 8,
            /// <summary>
            /// Enum NUMBER_29 for 29
            /// </summary>
            [EnumMember(Value = "29")]
            NUMBER_29 = 9,
            /// <summary>
            /// Enum NUMBER_30 for 30
            /// </summary>
            [EnumMember(Value = "30")]
            NUMBER_30 = 10,
            /// <summary>
            /// Enum NUMBER_31 for 31
            /// </summary>
            [EnumMember(Value = "31")]
            NUMBER_31 = 11,
            /// <summary>
            /// Enum NUMBER_32 for 32
            /// </summary>
            [EnumMember(Value = "32")]
            NUMBER_32 = 12,
            /// <summary>
            /// Enum NUMBER_33 for 33
            /// </summary>
            [EnumMember(Value = "33")]
            NUMBER_33 = 13,
            /// <summary>
            /// Enum NUMBER_34 for 34
            /// </summary>
            [EnumMember(Value = "34")]
            NUMBER_34 = 14,
            /// <summary>
            /// Enum NUMBER_35 for 35
            /// </summary>
            [EnumMember(Value = "35")]
            NUMBER_35 = 15,
            /// <summary>
            /// Enum NUMBER_36 for 36
            /// </summary>
            [EnumMember(Value = "36")]
            NUMBER_36 = 16,
            /// <summary>
            /// Enum NUMBER_37 for 37
            /// </summary>
            [EnumMember(Value = "37")]
            NUMBER_37 = 17,
            /// <summary>
            /// Enum NUMBER_38 for 38
            /// </summary>
            [EnumMember(Value = "38")]
            NUMBER_38 = 18,
            /// <summary>
            /// Enum NUMBER_81 for 81
            /// </summary>
            [EnumMember(Value = "81")]
            NUMBER_81 = 19,
            /// <summary>
            /// Enum NUMBER_82 for 82
            /// </summary>
            [EnumMember(Value = "82")]
            NUMBER_82 = 20,
            /// <summary>
            /// Enum NUMBER_83 for 83
            /// </summary>
            [EnumMember(Value = "83")]
            NUMBER_83 = 21,
            /// <summary>
            /// Enum NUMBER_84 for 84
            /// </summary>
            [EnumMember(Value = "84")]
            NUMBER_84 = 22,
            /// <summary>
            /// Enum NUMBER_85 for 85
            /// </summary>
            [EnumMember(Value = "85")]
            NUMBER_85 = 23,
            /// <summary>
            /// Enum NUMBER_86 for 86
            /// </summary>
            [EnumMember(Value = "86")]
            NUMBER_86 = 24        }
}
