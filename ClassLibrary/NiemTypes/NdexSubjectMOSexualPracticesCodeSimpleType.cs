/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a code that identifies the sexual practices and preferences of a subject based on investigator perception.
        /// </summary>
        /// <value>A data type for a code that identifies the sexual practices and preferences of a subject based on investigator perception.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum NdexSubjectMOSexualPracticesCodeSimpleType
        {
            /// <summary>
            /// Enum BestialityEnum for Bestiality
            /// </summary>
            [EnumMember(Value = "Bestiality")]
            BestialityEnum = 0,
            /// <summary>
            /// Enum BisexualityEnum for Bisexuality
            /// </summary>
            [EnumMember(Value = "Bisexuality")]
            BisexualityEnum = 1,
            /// <summary>
            /// Enum BondagePractitionerEnum for Bondage Practitioner
            /// </summary>
            [EnumMember(Value = "Bondage Practitioner")]
            BondagePractitionerEnum = 2,
            /// <summary>
            /// Enum ChildMolesterPediphileEnum for Child Molester_Pediphile
            /// </summary>
            [EnumMember(Value = "Child Molester_Pediphile")]
            ChildMolesterPediphileEnum = 3,
            /// <summary>
            /// Enum ExibitionistEnum for Exibitionist
            /// </summary>
            [EnumMember(Value = "Exibitionist")]
            ExibitionistEnum = 4,
            /// <summary>
            /// Enum GroupSexPractitionerEnum for Group Sex Practitioner
            /// </summary>
            [EnumMember(Value = "Group Sex Practitioner")]
            GroupSexPractitionerEnum = 5,
            /// <summary>
            /// Enum HeterosexualityEnum for Heterosexuality
            /// </summary>
            [EnumMember(Value = "Heterosexuality")]
            HeterosexualityEnum = 6,
            /// <summary>
            /// Enum HomosexualityEnum for Homosexuality
            /// </summary>
            [EnumMember(Value = "Homosexuality")]
            HomosexualityEnum = 7,
            /// <summary>
            /// Enum IncestEnum for Incest
            /// </summary>
            [EnumMember(Value = "Incest")]
            IncestEnum = 8,
            /// <summary>
            /// Enum MasochismEnum for Masochism
            /// </summary>
            [EnumMember(Value = "Masochism")]
            MasochismEnum = 9,
            /// <summary>
            /// Enum NecrophiliaEnum for Necrophilia
            /// </summary>
            [EnumMember(Value = "Necrophilia")]
            NecrophiliaEnum = 10,
            /// <summary>
            /// Enum PromiscuityEnum for Promiscuity
            /// </summary>
            [EnumMember(Value = "Promiscuity")]
            PromiscuityEnum = 11,
            /// <summary>
            /// Enum SadismEnum for Sadism
            /// </summary>
            [EnumMember(Value = "Sadism")]
            SadismEnum = 12,
            /// <summary>
            /// Enum TranssexualismEnum for Transsexualism
            /// </summary>
            [EnumMember(Value = "Transsexualism")]
            TranssexualismEnum = 13,
            /// <summary>
            /// Enum TransvestitismEnum for Transvestitism
            /// </summary>
            [EnumMember(Value = "Transvestitism")]
            TransvestitismEnum = 14,
            /// <summary>
            /// Enum UnknownEnum for Unknown
            /// </summary>
            [EnumMember(Value = "Unknown")]
            UnknownEnum = 15,
            /// <summary>
            /// Enum VoyeurismEnum for Voyeurism
            /// </summary>
            [EnumMember(Value = "Voyeurism")]
            VoyeurismEnum = 16        }
}
