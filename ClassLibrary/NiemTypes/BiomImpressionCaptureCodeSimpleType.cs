/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a kind of impression capture by which an image was obtained
        /// </summary>
        /// <value>A data type for a kind of impression capture by which an image was obtained</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum BiomImpressionCaptureCodeSimpleType
        {
            /// <summary>
            /// Enum NUMBER_0 for 0
            /// </summary>
            [EnumMember(Value = "0")]
            NUMBER_0 = 0,
            /// <summary>
            /// Enum NUMBER_1 for 1
            /// </summary>
            [EnumMember(Value = "1")]
            NUMBER_1 = 1,
            /// <summary>
            /// Enum NUMBER_24 for 24
            /// </summary>
            [EnumMember(Value = "24")]
            NUMBER_24 = 2,
            /// <summary>
            /// Enum NUMBER_25 for 25
            /// </summary>
            [EnumMember(Value = "25")]
            NUMBER_25 = 3,
            /// <summary>
            /// Enum NUMBER_28 for 28
            /// </summary>
            [EnumMember(Value = "28")]
            NUMBER_28 = 4,
            /// <summary>
            /// Enum NUMBER_29 for 29
            /// </summary>
            [EnumMember(Value = "29")]
            NUMBER_29 = 5,
            /// <summary>
            /// Enum NUMBER_4 for 4
            /// </summary>
            [EnumMember(Value = "4")]
            NUMBER_4 = 6,
            /// <summary>
            /// Enum NUMBER_41 for 41
            /// </summary>
            [EnumMember(Value = "41")]
            NUMBER_41 = 7,
            /// <summary>
            /// Enum NUMBER_42 for 42
            /// </summary>
            [EnumMember(Value = "42")]
            NUMBER_42 = 8,
            /// <summary>
            /// Enum NUMBER_8 for 8
            /// </summary>
            [EnumMember(Value = "8")]
            NUMBER_8 = 9        }
}
