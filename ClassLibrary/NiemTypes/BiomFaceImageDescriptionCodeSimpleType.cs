/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a facial expression of the subject and other attributes associated with the subject's captured facial image, including physical characteristics
        /// </summary>
        /// <value>A data type for a facial expression of the subject and other attributes associated with the subject's captured facial image, including physical characteristics</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum BiomFaceImageDescriptionCodeSimpleType
        {
            /// <summary>
            /// Enum BEARDEnum for BEARD
            /// </summary>
            [EnumMember(Value = "BEARD")]
            BEARDEnum = 0,
            /// <summary>
            /// Enum BLINKEnum for BLINK
            /// </summary>
            [EnumMember(Value = "BLINK")]
            BLINKEnum = 1,
            /// <summary>
            /// Enum CLEARGLASSESEnum for CLEAR GLASSES
            /// </summary>
            [EnumMember(Value = "CLEAR GLASSES")]
            CLEARGLASSESEnum = 2,
            /// <summary>
            /// Enum DARKGLASSESEnum for DARK GLASSES
            /// </summary>
            [EnumMember(Value = "DARK GLASSES")]
            DARKGLASSESEnum = 3,
            /// <summary>
            /// Enum DISTORTINGCONDITIONEnum for DISTORTING CONDITION
            /// </summary>
            [EnumMember(Value = "DISTORTING CONDITION")]
            DISTORTINGCONDITIONEnum = 4,
            /// <summary>
            /// Enum EYESAWAYEnum for EYES AWAY
            /// </summary>
            [EnumMember(Value = "EYES AWAY")]
            EYESAWAYEnum = 5,
            /// <summary>
            /// Enum FROWNINGEnum for FROWNING
            /// </summary>
            [EnumMember(Value = "FROWNING")]
            FROWNINGEnum = 6,
            /// <summary>
            /// Enum HATEnum for HAT
            /// </summary>
            [EnumMember(Value = "HAT")]
            HATEnum = 7,
            /// <summary>
            /// Enum LEFTEYEPATCHEnum for LEFT EYE PATCH
            /// </summary>
            [EnumMember(Value = "LEFT EYE PATCH")]
            LEFTEYEPATCHEnum = 8,
            /// <summary>
            /// Enum MOUSTACHEEnum for MOUSTACHE
            /// </summary>
            [EnumMember(Value = "MOUSTACHE")]
            MOUSTACHEEnum = 9,
            /// <summary>
            /// Enum MOUTHOPENEnum for MOUTH OPEN
            /// </summary>
            [EnumMember(Value = "MOUTH OPEN")]
            MOUTHOPENEnum = 10,
            /// <summary>
            /// Enum NEUTRALEnum for NEUTRAL
            /// </summary>
            [EnumMember(Value = "NEUTRAL")]
            NEUTRALEnum = 11,
            /// <summary>
            /// Enum NOEAREnum for NO EAR
            /// </summary>
            [EnumMember(Value = "NO EAR")]
            NOEAREnum = 12,
            /// <summary>
            /// Enum RAISEDBROWSEnum for RAISED BROWS
            /// </summary>
            [EnumMember(Value = "RAISED BROWS")]
            RAISEDBROWSEnum = 13,
            /// <summary>
            /// Enum RIGHTEYEPATCHEnum for RIGHT EYE PATCH
            /// </summary>
            [EnumMember(Value = "RIGHT EYE PATCH")]
            RIGHTEYEPATCHEnum = 14,
            /// <summary>
            /// Enum SCARFEnum for SCARF
            /// </summary>
            [EnumMember(Value = "SCARF")]
            SCARFEnum = 15,
            /// <summary>
            /// Enum SMILEEnum for SMILE
            /// </summary>
            [EnumMember(Value = "SMILE")]
            SMILEEnum = 16,
            /// <summary>
            /// Enum SQUINTINGEnum for SQUINTING
            /// </summary>
            [EnumMember(Value = "SQUINTING")]
            SQUINTINGEnum = 17,
            /// <summary>
            /// Enum TEETHVISIBLEEnum for TEETH VISIBLE
            /// </summary>
            [EnumMember(Value = "TEETH VISIBLE")]
            TEETHVISIBLEEnum = 18,
            /// <summary>
            /// Enum UNKNOWNEnum for UNKNOWN
            /// </summary>
            [EnumMember(Value = "UNKNOWN")]
            UNKNOWNEnum = 19        }
}
