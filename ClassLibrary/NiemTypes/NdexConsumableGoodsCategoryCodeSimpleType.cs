/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a code that identifies a type of consumable goods.
        /// </summary>
        /// <value>A data type for a code that identifies a type of consumable goods.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum NdexConsumableGoodsCategoryCodeSimpleType
        {
            /// <summary>
            /// Enum ALCOHOLBEVERAGEEnum for ALCOHOL_BEVERAGE
            /// </summary>
            [EnumMember(Value = "ALCOHOL_BEVERAGE")]
            ALCOHOLBEVERAGEEnum = 0,
            /// <summary>
            /// Enum ALCOHOLBEVERAGEBEEREnum for ALCOHOL_BEVERAGE_BEER
            /// </summary>
            [EnumMember(Value = "ALCOHOL_BEVERAGE_BEER")]
            ALCOHOLBEVERAGEBEEREnum = 1,
            /// <summary>
            /// Enum ALCOHOLBEVERAGELIQUOREnum for ALCOHOL_BEVERAGE_LIQUOR
            /// </summary>
            [EnumMember(Value = "ALCOHOL_BEVERAGE_LIQUOR")]
            ALCOHOLBEVERAGELIQUOREnum = 2,
            /// <summary>
            /// Enum ALCOHOLBEVERAGEWINEEnum for ALCOHOL_BEVERAGE_WINE
            /// </summary>
            [EnumMember(Value = "ALCOHOL_BEVERAGE_WINE")]
            ALCOHOLBEVERAGEWINEEnum = 3,
            /// <summary>
            /// Enum ALCOHOLNONBEVERAGEEnum for ALCOHOL_NONBEVERAGE
            /// </summary>
            [EnumMember(Value = "ALCOHOL_NONBEVERAGE")]
            ALCOHOLNONBEVERAGEEnum = 4,
            /// <summary>
            /// Enum ALCOHOLNONBEVERAGEFUELEnum for ALCOHOL_NONBEVERAGE_FUEL
            /// </summary>
            [EnumMember(Value = "ALCOHOL_NONBEVERAGE_FUEL")]
            ALCOHOLNONBEVERAGEFUELEnum = 5,
            /// <summary>
            /// Enum BEVERAGENONALCOHOLICEnum for BEVERAGE_NONALCOHOLIC
            /// </summary>
            [EnumMember(Value = "BEVERAGE_NONALCOHOLIC")]
            BEVERAGENONALCOHOLICEnum = 6,
            /// <summary>
            /// Enum CLEANINGPRODUCTEnum for CLEANING PRODUCT
            /// </summary>
            [EnumMember(Value = "CLEANING PRODUCT")]
            CLEANINGPRODUCTEnum = 7,
            /// <summary>
            /// Enum DIESELFUELEnum for DIESEL_FUEL
            /// </summary>
            [EnumMember(Value = "DIESEL_FUEL")]
            DIESELFUELEnum = 8,
            /// <summary>
            /// Enum FIREWOODFUELEnum for FIREWOOD_FUEL
            /// </summary>
            [EnumMember(Value = "FIREWOOD_FUEL")]
            FIREWOODFUELEnum = 9,
            /// <summary>
            /// Enum FOODEnum for FOOD
            /// </summary>
            [EnumMember(Value = "FOOD")]
            FOODEnum = 10,
            /// <summary>
            /// Enum FOODCANNEDEnum for FOOD_CANNED
            /// </summary>
            [EnumMember(Value = "FOOD_CANNED")]
            FOODCANNEDEnum = 11,
            /// <summary>
            /// Enum FOODDRIEDEnum for FOOD_DRIED
            /// </summary>
            [EnumMember(Value = "FOOD_DRIED")]
            FOODDRIEDEnum = 12,
            /// <summary>
            /// Enum FOODFRESHEnum for FOOD_FRESH
            /// </summary>
            [EnumMember(Value = "FOOD_FRESH")]
            FOODFRESHEnum = 13,
            /// <summary>
            /// Enum FOODFROZENEnum for FOOD_FROZEN
            /// </summary>
            [EnumMember(Value = "FOOD_FROZEN")]
            FOODFROZENEnum = 14,
            /// <summary>
            /// Enum FUELEnum for FUEL
            /// </summary>
            [EnumMember(Value = "FUEL")]
            FUELEnum = 15,
            /// <summary>
            /// Enum GASOLINEFUELEnum for GASOLINE_FUEL
            /// </summary>
            [EnumMember(Value = "GASOLINE_FUEL")]
            GASOLINEFUELEnum = 16,
            /// <summary>
            /// Enum GASOLINEOILFUELEnum for GASOLINE_OIL_FUEL
            /// </summary>
            [EnumMember(Value = "GASOLINE_OIL_FUEL")]
            GASOLINEOILFUELEnum = 17,
            /// <summary>
            /// Enum GROOMINGPRODUCTEnum for GROOMING PRODUCT
            /// </summary>
            [EnumMember(Value = "GROOMING PRODUCT")]
            GROOMINGPRODUCTEnum = 18,
            /// <summary>
            /// Enum HYGIENEPRODUCTEnum for HYGIENE PRODUCT
            /// </summary>
            [EnumMember(Value = "HYGIENE PRODUCT")]
            HYGIENEPRODUCTEnum = 19,
            /// <summary>
            /// Enum KEROSENEFUELEnum for KEROSENE_FUEL
            /// </summary>
            [EnumMember(Value = "KEROSENE_FUEL")]
            KEROSENEFUELEnum = 20,
            /// <summary>
            /// Enum MEATEnum for MEAT
            /// </summary>
            [EnumMember(Value = "MEAT")]
            MEATEnum = 21,
            /// <summary>
            /// Enum MEDICATIONOFFSHELFEnum for MEDICATION_OFF SHELF
            /// </summary>
            [EnumMember(Value = "MEDICATION_OFF SHELF")]
            MEDICATIONOFFSHELFEnum = 22,
            /// <summary>
            /// Enum OILFUELEnum for OIL_FUEL
            /// </summary>
            [EnumMember(Value = "OIL_FUEL")]
            OILFUELEnum = 23,
            /// <summary>
            /// Enum TOBACCOEnum for TOBACCO
            /// </summary>
            [EnumMember(Value = "TOBACCO")]
            TOBACCOEnum = 24,
            /// <summary>
            /// Enum TOBACCOPRODUCTEnum for TOBACCO PRODUCT
            /// </summary>
            [EnumMember(Value = "TOBACCO PRODUCT")]
            TOBACCOPRODUCTEnum = 25,
            /// <summary>
            /// Enum TOOTHPASTEEnum for TOOTH PASTE
            /// </summary>
            [EnumMember(Value = "TOOTH PASTE")]
            TOOTHPASTEEnum = 26        }
}
