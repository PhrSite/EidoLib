/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a method of access.
        /// </summary>
        /// <value>A data type for a method of access.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum NdexMethodOfAccessCodeSimpleType
        {
            /// <summary>
            /// Enum AttemptOnlyEnum for Attempt Only
            /// </summary>
            [EnumMember(Value = "Attempt Only")]
            AttemptOnlyEnum = 0,
            /// <summary>
            /// Enum BodilyForceEnum for Bodily Force
            /// </summary>
            [EnumMember(Value = "Bodily Force")]
            BodilyForceEnum = 1,
            /// <summary>
            /// Enum BodyForceKickedEnum for Body Force_Kicked
            /// </summary>
            [EnumMember(Value = "Body Force_Kicked")]
            BodyForceKickedEnum = 2,
            /// <summary>
            /// Enum BrokeEnum for Broke
            /// </summary>
            [EnumMember(Value = "Broke")]
            BrokeEnum = 3,
            /// <summary>
            /// Enum BrokeDoorPanelEnum for Broke Door Panel
            /// </summary>
            [EnumMember(Value = "Broke Door Panel")]
            BrokeDoorPanelEnum = 4,
            /// <summary>
            /// Enum BrokeGlassEnum for Broke Glass
            /// </summary>
            [EnumMember(Value = "Broke Glass")]
            BrokeGlassEnum = 5,
            /// <summary>
            /// Enum BrokePadlockEnum for Broke Padlock
            /// </summary>
            [EnumMember(Value = "Broke Padlock")]
            BrokePadlockEnum = 6,
            /// <summary>
            /// Enum BrokeRemovedCutDoorPanelEnum for Broke_Removed_Cut Door Panel
            /// </summary>
            [EnumMember(Value = "Broke_Removed_Cut Door Panel")]
            BrokeRemovedCutDoorPanelEnum = 7,
            /// <summary>
            /// Enum ChoppedEnum for Chopped
            /// </summary>
            [EnumMember(Value = "Chopped")]
            ChoppedEnum = 8,
            /// <summary>
            /// Enum CutEnum for Cut
            /// </summary>
            [EnumMember(Value = "Cut")]
            CutEnum = 9,
            /// <summary>
            /// Enum CutDoorPanelEnum for Cut Door Panel
            /// </summary>
            [EnumMember(Value = "Cut Door Panel")]
            CutDoorPanelEnum = 10,
            /// <summary>
            /// Enum CutGlassEnum for Cut Glass
            /// </summary>
            [EnumMember(Value = "Cut Glass")]
            CutGlassEnum = 11,
            /// <summary>
            /// Enum CutPadlockEnum for Cut Padlock
            /// </summary>
            [EnumMember(Value = "Cut Padlock")]
            CutPadlockEnum = 12,
            /// <summary>
            /// Enum CutBrokeGlassEnum for Cut_Broke Glass
            /// </summary>
            [EnumMember(Value = "Cut_Broke Glass")]
            CutBrokeGlassEnum = 13,
            /// <summary>
            /// Enum CutBrokePadlockEnum for Cut_Broke Padlock
            /// </summary>
            [EnumMember(Value = "Cut_Broke Padlock")]
            CutBrokePadlockEnum = 14,
            /// <summary>
            /// Enum HidInBuildingEnum for Hid in Building
            /// </summary>
            [EnumMember(Value = "Hid in Building")]
            HidInBuildingEnum = 15,
            /// <summary>
            /// Enum KickedEnum for Kicked
            /// </summary>
            [EnumMember(Value = "Kicked")]
            KickedEnum = 16,
            /// <summary>
            /// Enum KnobTwistEnum for Knob Twist
            /// </summary>
            [EnumMember(Value = "Knob Twist")]
            KnobTwistEnum = 17,
            /// <summary>
            /// Enum LawfulEnum for Lawful
            /// </summary>
            [EnumMember(Value = "Lawful")]
            LawfulEnum = 18,
            /// <summary>
            /// Enum LetInEnum for Let In
            /// </summary>
            [EnumMember(Value = "Let In")]
            LetInEnum = 19,
            /// <summary>
            /// Enum LetInRuseEnum for Let In_Ruse
            /// </summary>
            [EnumMember(Value = "Let In_Ruse")]
            LetInRuseEnum = 20,
            /// <summary>
            /// Enum LockBoxEnum for Lock Box
            /// </summary>
            [EnumMember(Value = "Lock Box")]
            LockBoxEnum = 21,
            /// <summary>
            /// Enum LockBrokenEnum for Lock Broken
            /// </summary>
            [EnumMember(Value = "Lock Broken")]
            LockBrokenEnum = 22,
            /// <summary>
            /// Enum LockCutEnum for Lock Cut
            /// </summary>
            [EnumMember(Value = "Lock Cut")]
            LockCutEnum = 23,
            /// <summary>
            /// Enum LockCutBrokenEnum for Lock Cut_Broken
            /// </summary>
            [EnumMember(Value = "Lock Cut_Broken")]
            LockCutBrokenEnum = 24,
            /// <summary>
            /// Enum LockKeyEnum for Lock Key
            /// </summary>
            [EnumMember(Value = "Lock Key")]
            LockKeyEnum = 25,
            /// <summary>
            /// Enum LockPickEnum for Lock Pick
            /// </summary>
            [EnumMember(Value = "Lock Pick")]
            LockPickEnum = 26,
            /// <summary>
            /// Enum LockPunchEnum for Lock Punch
            /// </summary>
            [EnumMember(Value = "Lock Punch")]
            LockPunchEnum = 27,
            /// <summary>
            /// Enum LockSlipEnum for Lock Slip
            /// </summary>
            [EnumMember(Value = "Lock Slip")]
            LockSlipEnum = 28,
            /// <summary>
            /// Enum LockSlipKeyPickEnum for Lock Slip_Key_Pick
            /// </summary>
            [EnumMember(Value = "Lock Slip_Key_Pick")]
            LockSlipKeyPickEnum = 29,
            /// <summary>
            /// Enum NoForceEnum for No Force
            /// </summary>
            [EnumMember(Value = "No Force")]
            NoForceEnum = 30,
            /// <summary>
            /// Enum OpenEnum for Open
            /// </summary>
            [EnumMember(Value = "Open")]
            OpenEnum = 31,
            /// <summary>
            /// Enum OpenForBusinessEnum for Open For Business
            /// </summary>
            [EnumMember(Value = "Open For Business")]
            OpenForBusinessEnum = 32,
            /// <summary>
            /// Enum OpenUnlockedEnum for Open_Unlocked
            /// </summary>
            [EnumMember(Value = "Open_Unlocked")]
            OpenUnlockedEnum = 33,
            /// <summary>
            /// Enum PhoneEnum for Phone
            /// </summary>
            [EnumMember(Value = "Phone")]
            PhoneEnum = 34,
            /// <summary>
            /// Enum PickedEnum for Picked
            /// </summary>
            [EnumMember(Value = "Picked")]
            PickedEnum = 35,
            /// <summary>
            /// Enum PickedLockEnum for Picked Lock
            /// </summary>
            [EnumMember(Value = "Picked Lock")]
            PickedLockEnum = 36,
            /// <summary>
            /// Enum PickedSlippedLockEnum for Picked_Slipped Lock
            /// </summary>
            [EnumMember(Value = "Picked_Slipped Lock")]
            PickedSlippedLockEnum = 37,
            /// <summary>
            /// Enum PriedEnum for Pried
            /// </summary>
            [EnumMember(Value = "Pried")]
            PriedEnum = 38,
            /// <summary>
            /// Enum RemovedEnum for Removed
            /// </summary>
            [EnumMember(Value = "Removed")]
            RemovedEnum = 39,
            /// <summary>
            /// Enum RemovedDoorPanelEnum for Removed Door Panel
            /// </summary>
            [EnumMember(Value = "Removed Door Panel")]
            RemovedDoorPanelEnum = 40,
            /// <summary>
            /// Enum RuseEnum for Ruse
            /// </summary>
            [EnumMember(Value = "Ruse")]
            RuseEnum = 41,
            /// <summary>
            /// Enum SawedEnum for Sawed
            /// </summary>
            [EnumMember(Value = "Sawed")]
            SawedEnum = 42,
            /// <summary>
            /// Enum SlippedLockEnum for Slipped Lock
            /// </summary>
            [EnumMember(Value = "Slipped Lock")]
            SlippedLockEnum = 43,
            /// <summary>
            /// Enum SmashedEnum for Smashed
            /// </summary>
            [EnumMember(Value = "Smashed")]
            SmashedEnum = 44,
            /// <summary>
            /// Enum ThroughUnlockedDoorEnum for Through Unlocked Door
            /// </summary>
            [EnumMember(Value = "Through Unlocked Door")]
            ThroughUnlockedDoorEnum = 45,
            /// <summary>
            /// Enum ThroughUnlockedWindowEnum for Through Unlocked Window
            /// </summary>
            [EnumMember(Value = "Through Unlocked Window")]
            ThroughUnlockedWindowEnum = 46,
            /// <summary>
            /// Enum TookApartEnum for Took Apart
            /// </summary>
            [EnumMember(Value = "Took Apart")]
            TookApartEnum = 47,
            /// <summary>
            /// Enum TunneledEnum for Tunneled
            /// </summary>
            [EnumMember(Value = "Tunneled")]
            TunneledEnum = 48,
            /// <summary>
            /// Enum TwistedDoorknobEnum for Twisted Doorknob
            /// </summary>
            [EnumMember(Value = "Twisted Doorknob")]
            TwistedDoorknobEnum = 49,
            /// <summary>
            /// Enum UnboltedGateEnum for Unbolted Gate
            /// </summary>
            [EnumMember(Value = "Unbolted Gate")]
            UnboltedGateEnum = 50,
            /// <summary>
            /// Enum UnlockedEnum for Unlocked
            /// </summary>
            [EnumMember(Value = "Unlocked")]
            UnlockedEnum = 51,
            /// <summary>
            /// Enum UnsecuredEnum for Unsecured
            /// </summary>
            [EnumMember(Value = "Unsecured")]
            UnsecuredEnum = 52        }
}
