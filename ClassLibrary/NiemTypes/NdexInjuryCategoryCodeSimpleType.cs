/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a code that identifies the type of bodily injury suffered by a person who was the victim of the incident.  Includes all NIBRS Codes, plus additional codes.
        /// </summary>
        /// <value>A data type for a code that identifies the type of bodily injury suffered by a person who was the victim of the incident.  Includes all NIBRS Codes, plus additional codes.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum NdexInjuryCategoryCodeSimpleType
        {
            /// <summary>
            /// Enum ApparentBrokenBonesEnum for Apparent Broken Bones
            /// </summary>
            [EnumMember(Value = "Apparent Broken Bones")]
            ApparentBrokenBonesEnum = 0,
            /// <summary>
            /// Enum ApparentMinorInjuryEnum for Apparent Minor Injury
            /// </summary>
            [EnumMember(Value = "Apparent Minor Injury")]
            ApparentMinorInjuryEnum = 1,
            /// <summary>
            /// Enum LossOfTeethEnum for Loss of Teeth
            /// </summary>
            [EnumMember(Value = "Loss of Teeth")]
            LossOfTeethEnum = 2,
            /// <summary>
            /// Enum NoneEnum for None
            /// </summary>
            [EnumMember(Value = "None")]
            NoneEnum = 3,
            /// <summary>
            /// Enum OtherEnum for Other
            /// </summary>
            [EnumMember(Value = "Other")]
            OtherEnum = 4,
            /// <summary>
            /// Enum OtherMajorInjuryEnum for Other Major Injury
            /// </summary>
            [EnumMember(Value = "Other Major Injury")]
            OtherMajorInjuryEnum = 5,
            /// <summary>
            /// Enum PossibleInternalInjuryEnum for Possible Internal Injury
            /// </summary>
            [EnumMember(Value = "Possible Internal Injury")]
            PossibleInternalInjuryEnum = 6,
            /// <summary>
            /// Enum SevereLacerationEnum for Severe Laceration
            /// </summary>
            [EnumMember(Value = "Severe Laceration")]
            SevereLacerationEnum = 7,
            /// <summary>
            /// Enum UnconsciousnessEnum for Unconsciousness
            /// </summary>
            [EnumMember(Value = "Unconsciousness")]
            UnconsciousnessEnum = 8,
            /// <summary>
            /// Enum UndeterminedEnum for Undetermined
            /// </summary>
            [EnumMember(Value = "Undetermined")]
            UndeterminedEnum = 9        }
}
