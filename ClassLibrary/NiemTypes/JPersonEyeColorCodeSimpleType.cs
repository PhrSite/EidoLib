/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a code set identifying an eye color of a person.
        /// </summary>
        /// <value>A data type for a code set identifying an eye color of a person.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum JPersonEyeColorCodeSimpleType
        {
            /// <summary>
            /// Enum BlackEnum for Black
            /// </summary>
            [EnumMember(Value = "Black")]
            BlackEnum = 0,
            /// <summary>
            /// Enum BlueEnum for Blue
            /// </summary>
            [EnumMember(Value = "Blue")]
            BlueEnum = 1,
            /// <summary>
            /// Enum BrownEnum for Brown
            /// </summary>
            [EnumMember(Value = "Brown")]
            BrownEnum = 2,
            /// <summary>
            /// Enum GrayEnum for Gray
            /// </summary>
            [EnumMember(Value = "Gray")]
            GrayEnum = 3,
            /// <summary>
            /// Enum GreenEnum for Green
            /// </summary>
            [EnumMember(Value = "Green")]
            GreenEnum = 4,
            /// <summary>
            /// Enum HazelEnum for Hazel
            /// </summary>
            [EnumMember(Value = "Hazel")]
            HazelEnum = 5,
            /// <summary>
            /// Enum MaroonEnum for Maroon
            /// </summary>
            [EnumMember(Value = "Maroon")]
            MaroonEnum = 6,
            /// <summary>
            /// Enum MulticoloredEnum for Multicolored
            /// </summary>
            [EnumMember(Value = "Multicolored")]
            MulticoloredEnum = 7,
            /// <summary>
            /// Enum PinkEnum for Pink
            /// </summary>
            [EnumMember(Value = "Pink")]
            PinkEnum = 8,
            /// <summary>
            /// Enum UnknownEnum for Unknown
            /// </summary>
            [EnumMember(Value = "Unknown")]
            UnknownEnum = 9        }
}
