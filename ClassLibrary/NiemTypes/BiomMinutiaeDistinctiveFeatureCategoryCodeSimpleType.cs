/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a kind of distinctive feature in a friction ridge image
        /// </summary>
        /// <value>A data type for a kind of distinctive feature in a friction ridge image</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum BiomMinutiaeDistinctiveFeatureCategoryCodeSimpleType
        {
            /// <summary>
            /// Enum CLEAREnum for CLEAR
            /// </summary>
            [EnumMember(Value = "CLEAR")]
            CLEAREnum = 0,
            /// <summary>
            /// Enum COREEnum for CORE
            /// </summary>
            [EnumMember(Value = "CORE")]
            COREEnum = 1,
            /// <summary>
            /// Enum CREASEEnum for CREASE
            /// </summary>
            [EnumMember(Value = "CREASE")]
            CREASEEnum = 2,
            /// <summary>
            /// Enum DELTAEnum for DELTA
            /// </summary>
            [EnumMember(Value = "DELTA")]
            DELTAEnum = 3,
            /// <summary>
            /// Enum DYSPLASIAEnum for DYSPLASIA
            /// </summary>
            [EnumMember(Value = "DYSPLASIA")]
            DYSPLASIAEnum = 4,
            /// <summary>
            /// Enum MINGROUPEnum for MINGROUP
            /// </summary>
            [EnumMember(Value = "MINGROUP")]
            MINGROUPEnum = 5,
            /// <summary>
            /// Enum MINUTIAEnum for MINUTIA
            /// </summary>
            [EnumMember(Value = "MINUTIA")]
            MINUTIAEnum = 6,
            /// <summary>
            /// Enum OTHERFEATEnum for OTHERFEAT
            /// </summary>
            [EnumMember(Value = "OTHERFEAT")]
            OTHERFEATEnum = 7,
            /// <summary>
            /// Enum SCAREnum for SCAR
            /// </summary>
            [EnumMember(Value = "SCAR")]
            SCAREnum = 8,
            /// <summary>
            /// Enum WARTEnum for WART
            /// </summary>
            [EnumMember(Value = "WART")]
            WARTEnum = 9        }
}
