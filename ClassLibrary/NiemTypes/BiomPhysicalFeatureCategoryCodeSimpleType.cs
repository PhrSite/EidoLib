/*
 * NiemTypes
 *
 * NIEM Types for the EIDO
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace NiemTypes
{ 
        /// <summary>
        /// A data type for a kind of physical feature. This code is used for defining a SMT category.
        /// </summary>
        /// <value>A data type for a kind of physical feature. This code is used for defining a SMT category.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum BiomPhysicalFeatureCategoryCodeSimpleType
        {
            /// <summary>
            /// Enum BIRTHMARKEnum for BIRTHMARK
            /// </summary>
            [EnumMember(Value = "BIRTHMARK")]
            BIRTHMARKEnum = 0,
            /// <summary>
            /// Enum BRANDEDEnum for BRANDED
            /// </summary>
            [EnumMember(Value = "BRANDED")]
            BRANDEDEnum = 1,
            /// <summary>
            /// Enum CHEMICALEnum for CHEMICAL
            /// </summary>
            [EnumMember(Value = "CHEMICAL")]
            CHEMICALEnum = 2,
            /// <summary>
            /// Enum CUTEnum for CUT
            /// </summary>
            [EnumMember(Value = "CUT")]
            CUTEnum = 3,
            /// <summary>
            /// Enum IMPLANTEnum for IMPLANT
            /// </summary>
            [EnumMember(Value = "IMPLANT")]
            IMPLANTEnum = 4,
            /// <summary>
            /// Enum MARKEnum for MARK
            /// </summary>
            [EnumMember(Value = "MARK")]
            MARKEnum = 5,
            /// <summary>
            /// Enum MISSINGEnum for MISSING
            /// </summary>
            [EnumMember(Value = "MISSING")]
            MISSINGEnum = 6,
            /// <summary>
            /// Enum PIERCINGEnum for PIERCING
            /// </summary>
            [EnumMember(Value = "PIERCING")]
            PIERCINGEnum = 7,
            /// <summary>
            /// Enum SCAREnum for SCAR
            /// </summary>
            [EnumMember(Value = "SCAR")]
            SCAREnum = 8,
            /// <summary>
            /// Enum TATTOOEnum for TATTOO
            /// </summary>
            [EnumMember(Value = "TATTOO")]
            TATTOOEnum = 9,
            /// <summary>
            /// Enum ZABIBAEnum for ZABIBA
            /// </summary>
            [EnumMember(Value = "ZABIBA")]
            ZABIBAEnum = 10        }
}
